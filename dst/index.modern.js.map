{"version":3,"file":"index.modern.js","sources":["../src/mapbox.js","../src/regl.js","../src/region/context.js","../src/loading/context.js","../src/loading/loading-updater.js","../src/map.js","../src/region/region-picker/circle-picker/utils.js","../src/region/region-picker/circle-picker/cursor-manager.js","../src/region/region-picker/circle-picker/circle-renderer.js","../src/region/region-picker/circle-picker/index.js","../src/region/region-picker/index.js","../src/use-recenter-region.js","../src/use-controls.js","../src/shaders.js","../src/utils.js","../src/constants.js","../src/tile.js","../src/tiles.js","../src/raster.js","../src/line.js","../src/fill.js","../src/use-ruler.js"],"sourcesContent":["import React, {\n  createContext,\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  useContext,\n} from 'react'\nimport mapboxgl from 'mapbox-gl'\n\nexport const MapboxContext = createContext(null)\n\nexport const useMapbox = () => {\n  return useContext(MapboxContext)\n}\n\nconst Mapbox = ({\n  glyphs,\n  style,\n  center,\n  zoom,\n  minZoom,\n  maxZoom,\n  maxBounds,\n  debug,\n  children,\n}) => {\n  const map = useRef()\n  const [ready, setReady] = useState()\n\n  const ref = useCallback((node) => {\n    const mapboxStyle = { version: 8, sources: {}, layers: [] }\n    if (glyphs) {\n      mapboxStyle.glyphs = glyphs\n    }\n    if (node !== null) {\n      map.current = new mapboxgl.Map({\n        container: node,\n        style: mapboxStyle,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        maxBounds: maxBounds,\n        dragRotate: false,\n        pitchWithRotate: false,\n        touchZoomRotate: true,\n      })\n      if (center) map.current.setCenter(center)\n      if (zoom) map.current.setZoom(zoom)\n      map.current.touchZoomRotate.disableRotation()\n      map.current.touchPitch.disable()\n      map.current.on('styledata', () => {\n        setReady(true)\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    return () => {\n      if (map.current) {\n        map.current.remove()\n        setReady(false)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    map.current.showTileBoundaries = debug\n  }, [debug])\n\n  return (\n    <MapboxContext.Provider\n      value={{\n        map: map.current,\n      }}\n    >\n      <div\n        style={{\n          top: '0px',\n          bottom: '0px',\n          position: 'absolute',\n          width: '100%',\n          ...style,\n        }}\n        ref={ref}\n      />\n      {ready && children}\n    </MapboxContext.Provider>\n  )\n}\n\nexport default Mapbox\n","import React, {\n  createContext,\n  useCallback,\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n} from 'react'\nimport _regl from 'regl'\n\nexport const ReglContext = createContext(null)\n\nexport const useRegl = () => {\n  return useContext(ReglContext)\n}\n\nconst Regl = ({ style, extensions, children }) => {\n  const regl = useRef()\n  const [ready, setReady] = useState(false)\n\n  const ref = useCallback((node) => {\n    if (node !== null) {\n      regl.current = _regl({\n        container: node,\n        extensions: ['OES_texture_float', 'OES_element_index_uint'],\n      })\n      setReady(true)\n    }\n  }, [])\n\n  useEffect(() => {\n    return () => {\n      if (regl.current) regl.current.destroy()\n      setReady(false)\n    }\n  }, [])\n\n  return (\n    <ReglContext.Provider\n      value={{\n        regl: regl.current,\n      }}\n    >\n      <div style={{ width: '100%', height: '100%', ...style }} ref={ref} />\n      {ready && children}\n    </ReglContext.Provider>\n  )\n}\n\nexport default Regl\n","import React, { createContext, useContext, useState } from 'react'\n\nconst RegionContext = createContext({\n  region: null,\n  onChange: () => {\n    throw new Error('Tried to set region before initializing context')\n  },\n})\n\nexport const useRegionContext = () => {\n  return useContext(RegionContext)\n}\n\nexport const useRegion = () => {\n  const { region } = useContext(RegionContext)\n  return { region }\n}\n\nexport const RegionProvider = ({ children }) => {\n  const [region, setRegion] = useState(null)\n\n  return (\n    <RegionContext.Provider value={{ region, setRegion }}>\n      {children}\n    </RegionContext.Provider>\n  )\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst LoadingContext = createContext({})\n\nexport const useSetLoading = () => {\n  const loadingId = useRef(uuidv4())\n  const loading = useRef(false)\n  const { dispatch } = useContext(LoadingContext)\n  const [metadataIds, setMetadataIds] = useState(new Set())\n  const [chunkIds, setChunkIds] = useState(new Set())\n\n  useEffect(() => {\n    return () => {\n      const loaders = [{ id: loadingId.current, key: 'loading' }]\n      metadataIds.forEach((id) => loaders.push({ id, key: 'metadata' }))\n      chunkIds.forEach((id) => loaders.push({ id, key: 'chunk' }))\n      dispatch({ loaders, type: 'clear' })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (loading.current && metadataIds.size === 0 && chunkIds.size === 0) {\n      dispatch({\n        loaders: [{ id: loadingId.current, key: 'loading' }],\n        type: 'clear',\n      })\n      loading.current = false\n    }\n  }, [metadataIds.size, chunkIds.size, loading.current])\n\n  const setLoading = useCallback((key = 'chunk') => {\n    if (!['chunk', 'metadata'].includes(key)) {\n      throw new Error(\n        `Unexpected loading key: ${key}. Expected one of: 'chunk', 'metadata'.`\n      )\n    }\n\n    const id = uuidv4()\n    const setter = key === 'metadata' ? setMetadataIds : setChunkIds\n    setter((prev) => {\n      prev.add(id)\n      return prev\n    })\n\n    const loaders = [{ id, key }]\n\n    if (!loading.current) {\n      loaders.push({ id: loadingId.current, key: 'loading' })\n      loading.current = true\n    }\n    dispatch({ loaders, type: 'set' })\n    return id\n  }, [])\n\n  const clearLoading = useCallback((id, { forceClear } = {}) => {\n    if (id) {\n      setMetadataIds((prevMetadata) => {\n        prevMetadata.delete(id)\n        return prevMetadata\n      })\n      setChunkIds((prevChunk) => {\n        prevChunk.delete(id)\n        return prevChunk\n      })\n\n      dispatch({\n        loaders: [\n          { id, key: 'metadata' },\n          { id, key: 'chunk' },\n        ],\n        type: 'clear',\n      })\n    }\n\n    if (forceClear && loading.current) {\n      dispatch({\n        loaders: [{ id: loadingId.current, key: 'loading' }],\n        type: 'clear',\n      })\n      loading.current = false\n    }\n  }, [])\n\n  return {\n    setLoading,\n    clearLoading,\n    loading: loading.current,\n    metadataLoading: metadataIds.size > 0,\n    chunkLoading: chunkIds.size > 0,\n  }\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'set':\n      action.loaders.forEach(({ id, key }) => {\n        state[key].add(id)\n      })\n\n      return { ...state }\n    case 'clear':\n      action.loaders.forEach(({ id, key }) => {\n        state[key].delete(id)\n      })\n\n      return { ...state }\n    default:\n      throw new Error(`Unexpected action: ${action.type}`)\n  }\n}\n\nexport const LoadingProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: new Set(),\n    metadata: new Set(),\n    chunk: new Set(),\n  })\n\n  return (\n    <LoadingContext.Provider\n      value={{\n        ...state,\n        dispatch,\n      }}\n    >\n      {children}\n    </LoadingContext.Provider>\n  )\n}\n\nexport const useLoadingContext = () => {\n  const { loading, metadata, chunk } = useContext(LoadingContext)\n\n  return {\n    loading: loading.size > 0,\n    metadataLoading: metadata.size > 0,\n    chunkLoading: chunk.size > 0,\n  }\n}\n","import { useEffect } from 'react'\n\nimport { useLoadingContext } from './context'\n\nexport const LoadingUpdater = ({\n  setLoading,\n  setMetadataLoading,\n  setChunkLoading,\n}) => {\n  const { loading, metadataLoading, chunkLoading } = useLoadingContext()\n\n  useEffect(() => {\n    if (setLoading) {\n      setLoading(loading)\n    }\n  }, [!!setLoading, loading])\n\n  useEffect(() => {\n    if (setMetadataLoading) {\n      setMetadataLoading(metadataLoading)\n    }\n  }, [!!setMetadataLoading, metadataLoading])\n\n  useEffect(() => {\n    if (setChunkLoading) {\n      setChunkLoading(chunkLoading)\n    }\n  }, [!!setChunkLoading, chunkLoading])\n\n  return null\n}\n","import React from 'react'\nimport Mapbox from './mapbox'\nimport Regl from './regl'\nimport { RegionProvider } from './region/context'\nimport { LoadingProvider, LoadingUpdater } from './loading'\n\nconst Map = ({\n  id,\n  tabIndex,\n  className,\n  style,\n  zoom,\n  minZoom,\n  maxZoom,\n  maxBounds,\n  center,\n  debug,\n  extensions,\n  glyphs,\n  children,\n  /** Tracks *any* pending requests made by containing `Raster` layers */\n  setLoading,\n  /** Tracks any metadata and coordinate requests made on initialization by containing `Raster` layers */\n  setMetadataLoading,\n  /** Tracks any requests of new chunks by containing `Raster` layers */\n  setChunkLoading,\n}) => {\n  return (\n    <div\n      id={id}\n      tabIndex={tabIndex}\n      className={className}\n      style={{\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        ...style,\n      }}\n    >\n      <Mapbox\n        zoom={zoom}\n        minZoom={minZoom}\n        maxZoom={maxZoom}\n        maxBounds={maxBounds}\n        center={center}\n        debug={debug}\n        glyphs={glyphs}\n        style={{ position: 'absolute' }}\n      >\n        <Regl\n          extensions={extensions}\n          style={{\n            position: 'absolute',\n            pointerEvents: 'none',\n            zIndex: -1,\n          }}\n        >\n          <LoadingProvider>\n            <LoadingUpdater\n              setLoading={setLoading}\n              setMetadataLoading={setMetadataLoading}\n              setChunkLoading={setChunkLoading}\n            />\n            <RegionProvider>{children}</RegionProvider>\n          </LoadingProvider>\n        </Regl>\n      </Mapbox>\n    </div>\n  )\n}\n\nexport default Map\n","import { geoPath, geoTransform } from 'd3-geo'\nimport mapboxgl from 'mapbox-gl'\n\nexport const project = (map, coordinates, options = {}) => {\n  // Convert any LngLatLike to LngLat\n  const ll = mapboxgl.LngLat.convert(coordinates)\n\n  let result = map.project(ll)\n\n  // When present, use referencePoint to find closest renderable point\n  const { referencePoint } = options\n  if (referencePoint) {\n    const deltas = [-360, 360]\n    deltas.forEach((delta) => {\n      const alternate = map.project({ lat: ll.lat, lng: ll.lng + delta })\n      if (\n        Math.abs(alternate.x - referencePoint.x) <\n        Math.abs(result.x - referencePoint.x)\n      ) {\n        result = alternate\n      }\n    })\n  }\n\n  return result\n}\n\nexport function getPathMaker(map, options) {\n  const transform = geoTransform({\n    point: function (lng, lat) {\n      const point = project(map, [lng, lat], options)\n      this.stream.point(point.x, point.y)\n    },\n  })\n  return geoPath().projection(transform)\n}\n","export default function CursorManager(map) {\n  const canvas = map.getCanvas()\n  const originalStyle = canvas.style.cursor\n\n  let mouseState = {\n    onHandle: false,\n    draggingHandle: false,\n    onCircle: false,\n    draggingCircle: false,\n  }\n\n  return function setCursor(newState) {\n    mouseState = {\n      ...mouseState,\n      ...newState,\n    }\n\n    if (mouseState.onHandle || mouseState.draggingHandle)\n      canvas.style.cursor = 'ew-resize'\n    else if (mouseState.onCircle || mouseState.draggingCircle)\n      canvas.style.cursor = 'move'\n    else canvas.style.cursor = originalStyle\n  }\n}\n","import { select } from 'd3-selection'\nimport { FLOATING_HANDLE, SHOW_RADIUS_GUIDELINE } from '../constants'\nimport { getPathMaker, project } from './utils'\nimport {\n  area,\n  convertArea,\n  distance,\n  rewind,\n  rhumbDestination,\n  lineString,\n  lineIntersect,\n  circle as turfCircle,\n  point,\n} from '@turf/turf'\nimport CursorManager from './cursor-manager'\n\nconst POLES = [point([0, -90]), point([0, 90])]\nconst abbreviations = {\n  kilometers: 'km',\n  miles: 'mi',\n}\n\nexport default function CircleRenderer({\n  id,\n  map,\n  onIdle = (circle) => {},\n  onDrag = (circle) => {},\n  initialCenter = { lat: 0, lng: 0 },\n  initialRadius = 0,\n  maxRadius,\n  minRadius,\n  units,\n}) {\n  let circle = null\n  let center = initialCenter\n  let centerXY = project(map, center)\n  let radius = initialRadius\n\n  const svg = select(`#circle-picker-${id}`).style('pointer-events', 'none')\n  const svgCircle = select(`#circle-${id}`).style('pointer-events', 'all')\n  const svgCircleCutout = select(`#circle-cutout-${id}`)\n  const svgHandle = select(`#handle-${id}`).style('pointer-events', 'all')\n  const svgGuideline = select(`#radius-guideline-${id}`)\n  const svgRadiusTextContainer = select(`#radius-text-container-${id}`)\n  const svgRadiusText = select(`#radius-text-${id}`).attr('fill-opacity', 0)\n\n  let guidelineAngle = 90\n  if (!SHOW_RADIUS_GUIDELINE) {\n    svgGuideline.style('display', 'none')\n    svgRadiusTextContainer.style('display', 'none')\n  }\n\n  const removers = []\n\n  //// LISTENERS ////\n\n  function addDragHandleListeners() {\n    const onMouseMove = (e) => {\n      let r = distance(\n        map.unproject(e.point).toArray(),\n        [center.lng, center.lat],\n        { units }\n      )\n      r = maxRadius ? Math.min(r, maxRadius) : r\n      r = minRadius ? Math.max(r, minRadius) : r\n      setRadius(r)\n      onDrag(circle)\n\n      if (FLOATING_HANDLE) {\n        const mouseXY = e.point\n        const rise = mouseXY.y - centerXY.y\n        const run = mouseXY.x - centerXY.x\n        let angle = (Math.atan(rise / run) * 180) / Math.PI\n        guidelineAngle = angle + 90 + (run < 0 ? 180 : 0)\n        setCircle()\n      }\n    }\n\n    const onMouseUp = (e) => {\n      onIdle(circle)\n      setCursor({ draggingHandle: false })\n      map.off('mousemove', onMouseMove)\n      svgHandle.style('pointer-events', 'all')\n      svgCircle.style('pointer-events', 'all')\n      svgRadiusText.attr('fill-opacity', 0)\n      svgGuideline.attr('stroke-opacity', 0)\n    }\n\n    svgHandle.on('mousedown', () => {\n      map.on('mousemove', onMouseMove)\n      map.once('mouseup', onMouseUp)\n      setCursor({ draggingHandle: true })\n      svgHandle.style('pointer-events', 'none')\n      svgCircle.style('pointer-events', 'none')\n      svgRadiusText.attr('fill-opacity', 1)\n      svgGuideline.attr('stroke-opacity', 1)\n    })\n\n    removers.push(function removeDragHandleListeners() {\n      svgHandle.on('mousedown', null)\n    })\n  }\n\n  function addCircleListeners() {\n    let offset\n    const mapCanvas = map.getCanvas()\n\n    const onMouseMove = (e) => {\n      setCenter(\n        {\n          lng: e.lngLat.lng - offset.lng,\n          lat: e.lngLat.lat - offset.lat,\n        },\n        {\n          x: e.point.x,\n          y: e.point.y,\n        }\n      )\n      onDrag(circle)\n    }\n\n    const onMouseUp = (e) => {\n      onIdle(circle)\n      setCursor({ draggingCircle: false })\n      map.off('mousemove', onMouseMove)\n      svgCircle.style('pointer-events', 'all')\n      svgHandle.style('pointer-events', 'all')\n    }\n\n    svgCircle.on('mousedown', (e) => {\n      const { offsetX: x, offsetY: y } = e\n      const lngLat = map.unproject({ x, y })\n      offset = {\n        lng: lngLat.lng - center.lng,\n        lat: lngLat.lat - center.lat,\n      }\n\n      setCursor({ draggingCircle: true })\n      map.on('mousemove', onMouseMove)\n      map.once('mouseup', onMouseUp)\n      svgCircle.style('pointer-events', 'none')\n      svgHandle.style('pointer-events', 'none')\n    })\n\n    svgCircle.on('wheel', (e) => {\n      e.preventDefault()\n      let newEvent = new e.constructor(e.type, e)\n      mapCanvas.dispatchEvent(newEvent)\n    })\n\n    removers.push(function removeCircleListeners() {\n      svgCircle.on('mousedown', null)\n      svgCircle.on('wheel', null)\n    })\n  }\n\n  function addMapMoveListeners() {\n    const onMove = setCircle\n\n    map.on('move', onMove)\n    removers.push(function removeMapMoveListeners() {\n      map.off('move', onMove)\n    })\n  }\n\n  //// CIRCLE ////\n\n  function geoCircle(center, radius, inverted = false) {\n    const c = turfCircle([center.lng, center.lat], radius, {\n      units,\n      steps: 64,\n      properties: {\n        center,\n        radius,\n        units,\n      },\n    })\n\n    c.properties.area = convertArea(area(c), 'meters', units)\n    c.properties.zoom = map.getZoom()\n\n    if (inverted) {\n      return c\n    }\n\n    // need to rewind or svg fill is inside-out\n    return rewind(c, { reverse: true, mutate: true })\n  }\n\n  //// SETTERS ////\n\n  const setCursor = CursorManager(map)\n\n  function setCenter(_center, _point) {\n    if (_center && _center !== center) {\n      if (nearPoles(_center, radius)) {\n        center = { lng: _center.lng, lat: center.lat }\n        centerXY = { x: _point.x, y: centerXY.y }\n      } else {\n        center = _center\n        centerXY = _point\n      }\n\n      setCircle()\n    }\n  }\n\n  function resetCenterXY() {\n    // reset centerXY value based on latest `map` value\n    centerXY = project(map, center, { referencePoint: centerXY })\n  }\n\n  function setRadius(_radius) {\n    if (_radius && _radius !== radius) {\n      if (!nearPoles(center, _radius)) {\n        radius = _radius\n        setCircle()\n      }\n    }\n  }\n\n  function nearPoles(center, radius) {\n    const turfPoint = point([center.lng, center.lat])\n\n    return POLES.some((pole) => distance(turfPoint, pole, { units }) < radius)\n  }\n\n  function setCircle() {\n    // ensure that centerXY is up-to-date with map\n    resetCenterXY()\n\n    const makePath = getPathMaker(map, {\n      referencePoint: centerXY,\n    })\n\n    // update svg circle\n    circle = geoCircle(center, radius)\n    const path = makePath(circle)\n    svgCircle.attr('d', path)\n\n    // update cutout\n    const cutoutCircle = geoCircle(center, radius, true)\n    const cutoutPath = makePath(cutoutCircle)\n    const { width, height } = svg.node().getBBox()\n    svgCircleCutout.attr('d', cutoutPath + ` M0,0H${width}V${height}H0V0z`)\n\n    // update other svg elements\n    const handleXY = (() => {\n      // by default just render handle based on radius and guideline angle\n      let coordinates = rhumbDestination(\n        [center.lng, center.lat],\n        radius,\n        guidelineAngle\n      ).geometry.coordinates\n\n      const lineEnd = rhumbDestination(\n        [center.lng, center.lat],\n        radius * 2,\n        guidelineAngle\n      )\n      const line = lineString([\n        [center.lng, center.lat],\n        lineEnd.geometry.coordinates,\n      ])\n      const inter = lineIntersect(line, circle)\n      // but prefer rendering using intersection with circle to handle distortions near poles\n      if (inter.features.length > 0) {\n        coordinates = inter.features[0].geometry.coordinates\n      }\n\n      return project(map, coordinates, {\n        referencePoint: centerXY,\n      })\n    })()\n\n    svgHandle.attr('cx', handleXY.x).attr('cy', handleXY.y)\n\n    svgGuideline\n      .attr('x1', centerXY.x)\n      .attr('y1', centerXY.y)\n      .attr('x2', handleXY.x)\n      .attr('y2', handleXY.y)\n\n    const translateY = 4\n\n    svgRadiusText\n      .text(radius.toFixed(0) + abbreviations[units])\n      .attr(\n        'transform',\n        `rotate(${-1 * guidelineAngle + 90}) ` + `translate(0, ${translateY})`\n      )\n\n    const translateX = (() => {\n      const { width: textWidth } = svgRadiusText.node().getBBox()\n      const coeff = 0.8 * Math.sin((guidelineAngle * Math.PI) / 180)\n      return 18 + Math.abs((coeff * textWidth) / 2)\n    })()\n\n    svgRadiusTextContainer.attr(\n      'transform',\n      `rotate(${guidelineAngle - 90}, ${handleXY.x}, ${handleXY.y}) ` +\n        `translate(${handleXY.x + translateX}, ${handleXY.y})`\n    )\n  }\n\n  //// INIT ////\n\n  addDragHandleListeners()\n  addCircleListeners()\n  addMapMoveListeners()\n  setCircle()\n  onIdle(circle)\n\n  //// INTERFACE ////\n\n  return {\n    remove: () => {\n      removers.reverse().forEach((remove) => remove())\n      onIdle(null)\n    },\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useMapbox } from '../../../mapbox'\nimport CircleRenderer from './circle-renderer'\n\nconst CirclePicker = ({\n  id,\n  backgroundColor,\n  center,\n  color,\n  fontFamily,\n  fontSize,\n  radius,\n  onIdle,\n  onDrag,\n  units,\n  maxRadius,\n  minRadius,\n}) => {\n  const { map } = useMapbox()\n  const [renderer, setRenderer] = useState(null)\n\n  useEffect(() => {\n    const renderer = CircleRenderer({\n      id,\n      map,\n      onIdle,\n      onDrag,\n      initialCenter: center,\n      initialRadius: radius,\n      units,\n      maxRadius,\n      minRadius,\n    })\n\n    setRenderer(renderer)\n\n    return function cleanup() {\n      // need to check load state for fast-refresh purposes\n      if (map.loaded()) renderer.remove()\n    }\n  }, [])\n\n  return (\n    <svg\n      id={`circle-picker-${id}`}\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <defs>\n        <clipPath id={`circle-clip-${id}`}>\n          <path id={`circle-cutout-${id}`} />\n        </clipPath>\n      </defs>\n\n      <path\n        id={`circle-${id}`}\n        stroke={color}\n        strokeWidth={1}\n        fill='transparent'\n        cursor='move'\n      />\n      <rect\n        x='0'\n        y='0'\n        width='100%'\n        height='100%'\n        clipPath={`url(#circle-clip-${id})`}\n        fill={backgroundColor}\n        fillOpacity={0.8}\n      />\n      <circle id={`handle-${id}`} r={8} fill={color} cursor='ew-resize' />\n      <line\n        id={`radius-guideline-${id}`}\n        stroke={color}\n        strokeOpacity={0}\n        strokeWidth={1}\n        strokeDasharray='3,2'\n      />\n      <g id={`radius-text-container-${id}`}>\n        <text\n          id={`radius-text-${id}`}\n          textAnchor='middle'\n          fontFamily={fontFamily}\n          fontSize={fontSize}\n          fill={color}\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default CirclePicker\n","import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport CirclePicker from './circle-picker'\nimport { UPDATE_STATS_ON_DRAG } from './constants'\nimport { distance } from '@turf/turf'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { useRegionContext } from '../context'\nimport { useMapbox } from '../../mapbox'\n\nfunction getInitialRadius(map, units, minRadius, maxRadius) {\n  const bounds = map.getBounds().toArray()\n  const dist = distance(bounds[0], bounds[1], { units })\n  let radius = Math.round(dist / 15)\n  radius = minRadius ? Math.max(minRadius, radius) : radius\n  radius = maxRadius ? Math.min(maxRadius, radius) : radius\n\n  return radius\n}\n\n// TODO:\n// - accept mode (only accept mode=\"circle\" to start)\nfunction RegionPicker({\n  backgroundColor,\n  color,\n  fontFamily,\n  fontSize,\n  units = 'kilometers',\n  initialRadius: initialRadiusProp,\n  minRadius,\n  maxRadius,\n}) {\n  const { map } = useMapbox()\n  const id = useRef(uuidv4())\n  const initialCenter = useRef(map.getCenter())\n  const initialRadius = useRef(\n    initialRadiusProp || getInitialRadius(map, units, minRadius, maxRadius)\n  )\n  const { setRegion } = useRegionContext()\n\n  const [center, setCenter] = useState(initialCenter.current)\n\n  useEffect(() => {\n    return () => {\n      // Clear region when unmounted\n      setRegion(null)\n    }\n  }, [])\n\n  const handleCircle = useCallback((circle) => {\n    if (!circle) return\n    setRegion(circle)\n    setCenter(circle.properties.center)\n  }, [])\n\n  // TODO: consider extending support for degrees and radians\n  if (!['kilometers', 'miles'].includes(units)) {\n    throw new Error('Units must be one of miles, kilometers')\n  }\n\n  return (\n    <CirclePicker\n      id={id.current}\n      map={map}\n      center={initialCenter.current}\n      radius={initialRadius.current}\n      onDrag={UPDATE_STATS_ON_DRAG ? handleCircle : undefined}\n      onIdle={handleCircle}\n      backgroundColor={backgroundColor}\n      color={color}\n      units={units}\n      fontFamily={fontFamily}\n      fontSize={fontSize}\n      maxRadius={maxRadius}\n      minRadius={minRadius}\n    />\n  )\n}\n\nexport default RegionPicker\n","import { useEffect, useState } from 'react'\n\nimport { useRegion } from './region/context'\nimport { useMapbox } from './mapbox'\n\nexport const useRecenterRegion = () => {\n  const [value, setValue] = useState({ recenterRegion: () => {} })\n  const { map } = useMapbox()\n  const { region } = useRegion()\n\n  const center = region?.properties?.center\n\n  useEffect(() => {\n    setValue({ recenterRegion: () => map.easeTo({ center }) })\n  }, [center])\n\n  return value\n}\n\nexport default useRecenterRegion\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { flushSync } from 'react-dom'\nimport { useMapbox } from './mapbox'\n\nexport const useControls = () => {\n  const [zoom, setZoom] = useState()\n  const [center, setCenter] = useState()\n  const { map } = useMapbox()\n\n  const updateControlsSync = useCallback(() => {\n    flushSync(() => {\n      setZoom(map.getZoom())\n      setCenter(map.getCenter())\n    })\n  }, [])\n\n  useEffect(() => {\n    setZoom(map.getZoom())\n    setCenter(map.getCenter())\n    map.on('load', updateControlsSync)\n    map.on('move', updateControlsSync)\n  }, [map])\n\n  return { center: center, zoom: zoom }\n}\n","const _sh = (mode) => {\n  return (value, which) => {\n    if (which.includes(mode)) return value\n    return ''\n  }\n}\n\nexport const vert = (mode, vars) => {\n  const sh = _sh(mode)\n\n  return `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n  attribute vec2 position;\n  ${sh(`varying vec2 uv;`, ['texture'])}\n  ${sh(vars.map((d) => `attribute float ${d};`).join(''), ['grid', 'dotgrid'])}\n  ${sh(vars.map((d) => `varying float ${d}v;`).join(''), ['grid', 'dotgrid'])}\n  uniform vec2 camera;\n  uniform float viewportWidth;\n  uniform float viewportHeight;\n  uniform float pixelRatio;\n  uniform float zoom;\n  uniform float size;\n  uniform float globalLevel;\n  uniform float level;\n  uniform vec2 offset;\n  void main() {\n    float scale = pixelRatio * 512.0 / size;\n    float globalMag = pow(2.0, zoom - globalLevel);\n    float mag = pow(2.0, zoom - level);\n    float x = mag * (position.x + offset.x * size) - globalMag * camera.x * size ;\n    float y = mag * (position.y + offset.y * size) - globalMag * camera.y * size ;\n    x = (scale * x);\n    y = (scale * y);\n    x = (2.0 * x / viewportWidth);\n    y = -(2.0 * y / viewportHeight);\n    ${sh(`uv = vec2(position.y, position.x) / size;`, ['texture'])}\n    ${sh(vars.map((d) => `${d}v = ${d};`).join(''), ['grid', 'dotgrid'])}\n    ${sh(`gl_PointSize = 0.9 * scale * mag;`, ['grid', 'dotgrid'])}\n    gl_Position = vec4(x, y, 0.0, 1.0);\n  }`\n}\n\nexport const frag = (mode, vars, customFrag, customUniforms) => {\n  const sh = _sh(mode)\n\n  const declarations = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n  uniform float opacity;\n  uniform sampler2D colormap;\n  uniform vec2 clim;\n  uniform float fillValue;\n  ${sh(`varying vec2 uv;`, ['texture'])}\n  ${sh(vars.map((d) => `uniform sampler2D ${d};`).join(''), ['texture'])}\n  ${sh(vars.map((d) => `varying float ${d}v;`).join(''), ['grid', 'dotgrid'])}\n  ${customUniforms.map((d) => `uniform float ${d};`).join('')}\n  `\n\n  if (!customFrag)\n    return `\n    ${declarations}\n    void main() {\n      ${sh(`float ${vars[0]} = texture2D(${vars[0]}, uv).x;`, ['texture'])}\n      ${sh(`float ${vars[0]} = ${vars[0]}v;`, ['grid', 'dotgrid'])}\n      ${sh(\n        `\n      if (length(gl_PointCoord.xy - 0.5) > 0.5) {\n        discard;\n      }\n      `,\n        ['dotgrid']\n      )}\n      if (${vars[0]} == fillValue) {\n        discard;\n      }\n      float rescaled = (${vars[0]} - clim.x)/(clim.y - clim.x);\n      vec4 c = texture2D(colormap, vec2(rescaled, 1.0));  \n      gl_FragColor = vec4(c.x, c.y, c.z, opacity);\n      gl_FragColor.rgb *= gl_FragColor.a;\n    }`\n\n  if (customFrag)\n    return `\n    ${declarations}\n    void main() {\n      ${sh(\n        `${vars.map((d) => `float ${d} = texture2D(${d}, uv).x;`).join('')}`,\n        ['texture']\n      )}\n      ${sh(`${vars.map((d) => `float ${d} = ${d}v;`).join('')}`, [\n        'grid',\n        'dotgrid',\n      ])}\n      ${customFrag}\n    }`\n}\n","import { point, rhumbBearing, rhumbDestination } from '@turf/turf'\nimport { select } from 'd3-selection'\n\nconst d2r = Math.PI / 180\n\nconst clip = (v, max) => {\n  let result\n  if (v < 0) {\n    result = v + max + 1\n  } else if (v > max) {\n    result = v - max - 1\n  } else {\n    result = v\n  }\n\n  return Math.min(Math.max(result, 0), max)\n}\n\nexport const keyToTile = (key) => {\n  return key.split(',').map((d) => parseInt(d))\n}\n\nexport const tileToKey = (tile) => {\n  return tile.join(',')\n}\n\nexport const pointToTile = (lon, lat, z) => {\n  const z2 = Math.pow(2, z)\n  let tile = pointToCamera(lon, lat, z)\n  tile[0] = Math.floor(tile[0])\n  tile[1] = Math.min(Math.floor(tile[1]), z2 - 1)\n\n  return tile\n}\n\nexport const pointToCamera = (lon, lat, z) => {\n  let sin = Math.sin(lat * d2r),\n    z2 = Math.pow(2, z),\n    x = z2 * (lon / 360 + 0.5),\n    y = z2 * (0.5 - (0.25 * Math.log((1 + sin) / (1 - sin))) / Math.PI)\n\n  x = x % z2\n  y = Math.max(Math.min(y, z2), 0)\n  if (x < 0) x = x + z2\n  return [x, y, z]\n}\n\nexport const cameraToPoint = (x, y, z) => {\n  const z2 = Math.pow(2, z)\n\n  const lon = 360 * (x / z2) - 180\n\n  const y2 = 180 - (y / z2) * 360\n  const lat = (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90\n\n  return [lon, lat]\n}\n\nexport const zoomToLevel = (zoom, maxZoom) => {\n  if (maxZoom) return Math.min(Math.max(0, Math.floor(zoom)), maxZoom)\n  return Math.max(0, Math.floor(zoom))\n}\n\nconst getOffsets = (length, tileSize, camera) => {\n  const siblingCount = (length - tileSize) / tileSize\n\n  // Do not add offset for very small fraction of tile\n  if (Math.abs(siblingCount) < 0.001) {\n    return [0, 0]\n  }\n\n  const cameraOffset = camera - Math.floor(camera)\n  const prev = siblingCount / 2 + 0.5 - cameraOffset\n  const next = siblingCount - prev\n\n  return [-1 * Math.ceil(prev), Math.ceil(next)]\n}\n\nexport const getSiblings = (tile, { viewport, zoom, size, camera }) => {\n  const [tileX, tileY, tileZ] = tile\n  const { viewportHeight, viewportWidth } = viewport\n  const [cameraX, cameraY] = camera\n\n  const magnification = Math.pow(2, zoom - tileZ)\n  const scale = (window.devicePixelRatio * 512) / size\n  const tileSize = size * scale * magnification\n\n  const deltaX = getOffsets(viewportWidth, tileSize, cameraX)\n  const deltaY = getOffsets(viewportHeight, tileSize, cameraY)\n\n  let offsets = []\n  for (let x = deltaX[0]; x <= deltaX[1]; x++) {\n    for (let y = deltaY[0]; y <= deltaY[1]; y++) {\n      offsets.push([tileX + x, tileY + y, tileZ])\n    }\n  }\n\n  const max = Math.pow(2, tileZ) - 1\n  return offsets.reduce((accum, offset) => {\n    const [x, y, z] = offset\n    const tile = [clip(x, max), clip(y, max), z]\n    const key = tileToKey(tile)\n\n    if (!accum[key]) {\n      accum[key] = []\n    }\n\n    accum[key].push(offset)\n\n    return accum\n  }, {})\n}\n\nexport const getKeysToRender = (targetKey, tiles, maxZoom) => {\n  const ancestor = getAncestorToRender(targetKey, tiles)\n\n  if (ancestor) {\n    return [ancestor]\n  }\n\n  const descendants = getDescendantsToRender(targetKey, tiles, maxZoom)\n  if (descendants.length) {\n    return descendants\n  }\n\n  return [targetKey]\n}\n\nexport const getAncestorToRender = (targetKey, tiles) => {\n  let [x, y, z] = keyToTile(targetKey)\n  while (z >= 0) {\n    const key = tileToKey([x, y, z])\n    if (tiles[key].isBufferPopulated()) {\n      return key\n    }\n    z--\n    x = Math.floor(x / 2)\n    y = Math.floor(y / 2)\n  }\n}\n\nexport const getDescendantsToRender = (targetKey, tiles, maxZoom) => {\n  let [initialX, initialY, initialZ] = keyToTile(targetKey)\n  let [x, y, z] = [initialX, initialY, initialZ]\n  let coverage = 0\n  let descendants = []\n  while (z <= maxZoom) {\n    const delta = z - initialZ\n    const keys = []\n    for (let deltaX = 0; deltaX <= delta; deltaX++) {\n      for (let deltaY = 0; deltaY <= delta; deltaY++) {\n        keys.push(tileToKey([x + deltaX, y + deltaY, z]))\n      }\n    }\n\n    const coveringKeys = keys.filter((key) => tiles[key].isBufferPopulated())\n    const currentCoverage = coveringKeys.length / keys.length\n\n    if (coverage === 1) {\n      return keys\n    } else if (currentCoverage > coverage) {\n      descendants = keys\n    }\n\n    z++\n    x = x * 2\n    y = y * 2\n  }\n\n  return descendants\n}\n\nexport const getOverlappingAncestor = (key, renderedKeys) => {\n  const [aX, aY, aZ] = keyToTile(key)\n  const child = { x: aX, y: aY, z: aZ }\n\n  return renderedKeys.find((parentKey) => {\n    const [bX, bY, bZ] = keyToTile(parentKey)\n    const parent = { x: bX, y: bY, z: bZ }\n\n    if (child.z <= parent.z) {\n      return false\n    } else {\n      const factor = Math.pow(2, child.z - parent.z)\n\n      return (\n        Math.floor(child.x / factor) === parent.x &&\n        Math.floor(child.y / factor) === parent.y\n      )\n    }\n  })\n}\n\nexport const getAdjustedOffset = (offset, renderedKey) => {\n  const [renderedX, renderedY, renderedLevel] = keyToTile(renderedKey)\n  const [offsetX, offsetY, level] = offset\n\n  // Overall factor to scale offset by\n  const factor = Math.pow(2, level - renderedLevel)\n\n  // Factor used to calculate adjustment when rendering a descendant tile\n  const descendantFactor =\n    renderedLevel > level ? Math.pow(2, renderedLevel - level) : 1\n\n  return [\n    Math.floor(offsetX / factor) + (renderedX % descendantFactor),\n    Math.floor(offsetY / factor) + (renderedY % descendantFactor),\n  ]\n}\n\nexport const getTilesOfRegion = (region, level) => {\n  const { center, radius, units } = region.properties\n  const centralTile = pointToTile(center.lng, center.lat, level)\n\n  const tiles = new Set([tileToKey(centralTile)])\n\n  region.geometry.coordinates[0].forEach(([lng, lat]) => {\n    // Add tile along edge of region\n    const edgeTile = pointToTile(lng, lat, level)\n    tiles.add(tileToKey(edgeTile))\n\n    // Add any intermediate tiles if edge is > 1 tile away from center\n    const maxDiff = Math.max(\n      Math.abs(edgeTile[0] - centralTile[0]),\n      Math.abs(edgeTile[1] - centralTile[1])\n    )\n    if (maxDiff > 1) {\n      const centerPoint = point([center.lng, center.lat])\n      const bearing = rhumbBearing(centerPoint, point([lng, lat]))\n\n      for (let i = 1; i < maxDiff; i++) {\n        const intermediatePoint = rhumbDestination(\n          centerPoint,\n          (i * radius) / maxDiff,\n          bearing,\n          { units }\n        )\n        const intermediateTile = pointToTile(\n          intermediatePoint.geometry.coordinates[0],\n          intermediatePoint.geometry.coordinates[1],\n          level\n        )\n        tiles.add(tileToKey(intermediateTile))\n      }\n    }\n  })\n\n  return Array.from(tiles)\n}\n\nexport const getPyramidMetadata = (metadata) => {\n  const multiscales = metadata.metadata['.zattrs'].multiscales\n\n  if (!multiscales) {\n    throw new Error(\n      'Missing `multiscales` value in .zattrs. Please check your pyramid generation code.'\n    )\n  }\n\n  const datasets = multiscales[0].datasets\n\n  if (!datasets || datasets.length === 0) {\n    throw new Error(\n      'No datasets provided in `multiscales` metadata. Please check your pyramid generation code.'\n    )\n  }\n\n  const levels = datasets.map((dataset) => Number(dataset.path))\n  const maxZoom = Math.max(...levels)\n  const tileSize = datasets[0].pixels_per_tile\n\n  if (!tileSize) {\n    throw new Error(\n      'Missing required `pixels_per_tile` value in `multiscales` metadata. Please check your pyramid generation code.'\n    )\n  }\n  return { levels, maxZoom, tileSize }\n}\n\n/**\n * Given a selector, generates an Object mapping each bandName to an Object\n * representing which values of each dimension that bandName represents.\n * @param {selector} Object of {[dimension]: dimensionValue|Array<dimensionValue>} pairs\n * @returns Object containing bandName, {[dimension]: dimensionValue} pairs\n */\nexport const getBandInformation = (selector) => {\n  const combinedBands = Object.keys(selector)\n    .filter((key) => Array.isArray(selector[key]))\n    .reduce((bandMapping, selectorKey) => {\n      const values = selector[selectorKey]\n      let keys\n      if (typeof values[0] === 'string') {\n        keys = values\n      } else {\n        keys = values.map((d) => selectorKey + '_' + d)\n      }\n\n      const bands = Object.keys(bandMapping)\n      const updatedBands = {}\n      keys.forEach((key, i) => {\n        if (bands.length > 0) {\n          bands.forEach((band) => {\n            const bandKey = `${band}_${key}`\n            updatedBands[bandKey] = {\n              ...bandMapping[band],\n              [selectorKey]: values[i],\n            }\n          })\n        } else {\n          updatedBands[key] = { [selectorKey]: values[i] }\n        }\n      })\n\n      return updatedBands\n    }, {})\n\n  return combinedBands\n}\n\nexport const getBands = (variable, selector = {}) => {\n  const bandInfo = getBandInformation(selector)\n  const bandNames = Object.keys(bandInfo)\n\n  if (bandNames.length > 0) {\n    return bandNames\n  } else {\n    return [variable]\n  }\n}\n\n/**\n * Mutates a given object by adding `value` to array at nested location specified by `keys`\n * @param {obj} Object of any structure\n * @param {Array<string>} keys describing nested location where value should be set\n * @param {any} value to be added to array at location specified by keys\n * @returns reference to updated obj\n */\nexport const setObjectValues = (obj, keys, value) => {\n  let ref = obj\n  keys.forEach((key, i) => {\n    if (i === keys.length - 1) {\n      if (!ref[key]) {\n        ref[key] = []\n      }\n    } else {\n      if (!ref[key]) {\n        ref[key] = {}\n      }\n    }\n    ref = ref[key]\n  })\n\n  ref.push(value)\n  return obj\n}\n\nexport const getSelectorHash = (selector) => {\n  return JSON.stringify(selector)\n}\n\nexport const getChunks = (\n  selector,\n  dimensions,\n  coordinates,\n  shape,\n  chunks,\n  x,\n  y\n) => {\n  const chunkIndicesToUse = dimensions.map((dimension, i) => {\n    if (dimension === 'x') {\n      return [x]\n    } else if (dimension === 'y') {\n      return [y]\n    }\n\n    const selectorValue = selector[dimension]\n    const coords = coordinates[dimension]\n    const chunkSize = chunks[i]\n    let indices\n    if (Array.isArray(selectorValue)) {\n      // Return all indices of selector value when array\n      indices = selectorValue.map((v) => coords.indexOf(v))\n    } else if (selectorValue != undefined) {\n      // Return index of single selector value otherwise when present\n      indices = [coords.indexOf(selectorValue)]\n    } else {\n      // Otherwise, vary over the entire shape of the dimension\n      indices = Array(shape[i])\n        .fill(null)\n        .map((_, j) => j)\n    }\n\n    return (\n      indices\n        .map((index) => Math.floor(index / chunkSize))\n        // Filter out repeated instances of indices\n        .filter((v, i, a) => a.indexOf(v) === i)\n    )\n  })\n\n  let result = [[]]\n  chunkIndicesToUse.forEach((indices) => {\n    const updatedResult = []\n    indices.forEach((index) => {\n      result.forEach((prev) => {\n        updatedResult.push([...prev, index])\n      })\n    })\n    result = updatedResult\n  })\n\n  return result\n}\n\nexport const getPositions = (size, mode) => {\n  let position = []\n  if (mode === 'grid' || mode === 'dotgrid') {\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        position.push([j + 0.5, i + 0.5])\n      }\n    }\n  }\n  if (mode === 'texture') {\n    position = [\n      0.0,\n      0.0,\n      0.0,\n      size,\n      size,\n      0.0,\n      size,\n      0.0,\n      0.0,\n      size,\n      size,\n      size,\n    ]\n  }\n  return position\n}\n\nexport const updatePaintProperty = (map, ref, key, value) => {\n  const { current: id } = ref\n  if (map.getLayer(id)) {\n    map.setPaintProperty(id, key, value)\n  }\n}\n","// mirrors https://github.com/carbonplan/ndpyramid/blob/41f2bedeb3297db7e299285ca43363f9c0c1a65e/ndpyramid/utils.py#L14-L25\nexport const DEFAULT_FILL_VALUES = {\n  '|S1': '\\x00',\n  '<i1': -127,\n  '|u1': 255,\n  '<i2': -32767,\n  '<u2': 65535,\n  '<i4': -2147483647,\n  '<u4': 4294967295,\n  // '<i8': -9223372036854775806,\n  '<u8': 18446744073709551614,\n  '<f4': 9.969209968386869e36,\n  '<f8': 9.969209968386869e36,\n}\n","import {\n  getBandInformation,\n  getChunks,\n  keyToTile,\n  getSelectorHash,\n} from './utils'\n\nclass Tile {\n  constructor({\n    key,\n    loader,\n    shape,\n    chunks,\n    dimensions,\n    coordinates,\n    bands,\n    initializeBuffer,\n  }) {\n    this.key = key\n    this.tileCoordinates = keyToTile(key)\n\n    this.shape = shape\n    this.chunks = chunks\n    this.dimensions = dimensions\n    this.coordinates = coordinates\n    this.bands = bands\n\n    this._bufferCache = null\n    this._buffers = {}\n\n    this._loading = {}\n    this._ready = {}\n\n    bands.forEach((k) => {\n      this._buffers[k] = initializeBuffer()\n    })\n\n    this.chunkedData = {}\n\n    this._loader = loader\n  }\n\n  getBuffers() {\n    return this._buffers\n  }\n\n  async loadChunks(chunks) {\n    const updated = await Promise.all(\n      chunks.map(\n        (chunk) =>\n          new Promise((resolve) => {\n            const key = chunk.join('.')\n            if (this.chunkedData[key]) {\n              resolve(false)\n            } else {\n              this._loading[key] = true\n              this._ready[key] = new Promise((innerResolve) => {\n                this._loader(chunk, (err, data) => {\n                  this.chunkedData[key] = data\n                  this._loading[key] = false\n                  innerResolve(true)\n                  resolve(true)\n                })\n              })\n            }\n          })\n      )\n    )\n\n    return updated.some(Boolean)\n  }\n\n  async populateBuffers(chunks, selector) {\n    const updated = await this.loadChunks(chunks)\n\n    this.populateBuffersSync(selector)\n\n    return updated\n  }\n\n  populateBuffersSync(selector) {\n    const bandInformation = getBandInformation(selector)\n\n    this.bands.forEach((band) => {\n      const info = bandInformation[band] || selector\n      const chunks = getChunks(\n        info,\n        this.dimensions,\n        this.coordinates,\n        this.shape,\n        this.chunks,\n        this.tileCoordinates[0],\n        this.tileCoordinates[1]\n      )\n\n      if (chunks.length !== 1) {\n        throw new Error(\n          `Expected 1 chunk for band '${band}', found ${\n            chunks.length\n          }: ${chunks.join(', ')}`\n        )\n      }\n      const chunk = chunks[0]\n      const chunkKey = chunk.join('.')\n      const data = this.chunkedData[chunkKey]\n\n      if (!data) {\n        throw new Error(`Missing data for chunk: ${chunkKey}`)\n      }\n\n      let bandData = data\n      if (info) {\n        const indices = this.dimensions\n          .map((d) => (['x', 'y'].includes(d) ? null : d))\n          .map((d, i) => {\n            if (info[d] === undefined) {\n              return null\n            } else {\n              const value = info[d]\n              return (\n                this.coordinates[d].findIndex(\n                  (coordinate) => coordinate === value\n                ) % this.chunks[i]\n              )\n            }\n          })\n\n        bandData = data.pick(...indices)\n      }\n\n      if (bandData.dimension !== 2) {\n        throw new Error(\n          `Unexpected data dimensions for band: ${band}. Found ${bandData.dimension}, expected 2. Check the selector value.`\n        )\n      }\n      this._buffers[band](bandData)\n    })\n\n    this._bufferCache = getSelectorHash(selector)\n  }\n\n  isBufferPopulated() {\n    return !!this._bufferCache\n  }\n\n  isLoading() {\n    return Object.keys(this._loading).some((key) => this._loading[key])\n  }\n\n  isLoadingChunks(chunks) {\n    return chunks.every((chunk) => this._loading[chunk.join('.')])\n  }\n\n  async chunksLoaded(chunks) {\n    await Promise.all(chunks.map((chunk) => this._ready[chunk.join('.')]))\n\n    return true\n  }\n\n  hasLoadedChunks(chunks) {\n    return chunks.every((chunk) => this.chunkedData[chunk.join('.')])\n  }\n\n  hasPopulatedBuffer(selector) {\n    return (\n      !!this._bufferCache && this._bufferCache === getSelectorHash(selector)\n    )\n  }\n\n  getPointValues({ selector, point: [x, y] }) {\n    const result = []\n    const chunks = getChunks(\n      selector,\n      this.dimensions,\n      this.coordinates,\n      this.shape,\n      this.chunks,\n      this.tileCoordinates[0],\n      this.tileCoordinates[1]\n    )\n\n    chunks.forEach((chunk) => {\n      const key = chunk.join('.')\n      const chunkData = this.chunkedData[key]\n\n      if (!chunkData) {\n        throw new Error(`Missing data for chunk: ${key}`)\n      }\n\n      const combinedIndices = this.chunks.reduce(\n        (accum, count, i) => {\n          const dimension = this.dimensions[i]\n          const chunkOffset = chunk[i] * count\n\n          if (dimension === 'x') {\n            return accum.map((prev) => [...prev, x])\n          } else if (dimension === 'y') {\n            return accum.map((prev) => [...prev, y])\n          } else if (selector.hasOwnProperty(dimension)) {\n            const selectorValues = Array.isArray(selector[dimension])\n              ? selector[dimension]\n              : [selector[dimension]]\n            const selectorIndices = selectorValues\n              .map((value) => this.coordinates[dimension].indexOf(value))\n              .filter(\n                (index) => chunkOffset <= index && index < chunkOffset + count\n              )\n\n            return selectorIndices.reduce((a, index) => {\n              return a.concat(accum.map((prev) => [...prev, index]))\n            }, [])\n          } else {\n            let updatedAccum = []\n\n            for (let j = 0; j < count; j++) {\n              const index = chunkOffset + j\n              updatedAccum = updatedAccum.concat(\n                accum.map((prev) => [...prev, index])\n              )\n            }\n\n            return updatedAccum\n          }\n        },\n        [[]]\n      )\n\n      combinedIndices.forEach((indices) => {\n        const keys = indices.reduce((accum, el, i) => {\n          const coordinates = this.coordinates[this.dimensions[i]]\n          const selectorValue = selector[this.dimensions[i]]\n\n          if (\n            coordinates &&\n            (Array.isArray(selectorValue) || selectorValue == undefined)\n          ) {\n            accum.push(coordinates[el])\n          }\n\n          return accum\n        }, [])\n        const chunkIndices = indices.map((el, i) =>\n          ['x', 'y'].includes(this.dimensions[i])\n            ? el\n            : el - chunk[i] * this.chunks[i]\n        )\n        result.push({\n          keys,\n          value: chunkData.get(...chunkIndices),\n        })\n      })\n    })\n\n    return result\n  }\n}\n\nexport default Tile\n","import zarr from 'zarr-js'\nimport ndarray from 'ndarray'\nimport { distance } from '@turf/turf'\n\nimport { vert, frag } from './shaders'\nimport {\n  zoomToLevel,\n  keyToTile,\n  pointToCamera,\n  pointToTile,\n  getPositions,\n  getSiblings,\n  getKeysToRender,\n  getAdjustedOffset,\n  getOverlappingAncestor,\n  cameraToPoint,\n  getTilesOfRegion,\n  getPyramidMetadata,\n  getBands,\n  setObjectValues,\n  getChunks,\n  getSelectorHash,\n} from './utils'\nimport { DEFAULT_FILL_VALUES } from './constants'\nimport Tile from './tile'\n\nexport const createTiles = (regl, opts) => {\n  return new Tiles(opts)\n\n  function Tiles({\n    source,\n    colormap,\n    clim,\n    opacity,\n    display,\n    variable,\n    selector = {},\n    uniforms: customUniforms = {},\n    frag: customFrag,\n    fillValue,\n    mode = 'texture',\n    setLoading,\n    clearLoading,\n    invalidate,\n    invalidateRegion,\n    setMetadata,\n  }) {\n    this.tiles = {}\n    this.loaders = {}\n    this.active = {}\n    this.display = display\n    this.clim = clim\n    this.opacity = opacity\n    this.selector = selector\n    this.variable = variable\n    this.fillValue = fillValue\n    this.invalidate = invalidate\n    this.viewport = { viewportHeight: 0, viewportWidth: 0 }\n    this._loading = false\n    this.setLoading = setLoading\n    this.clearLoading = clearLoading\n\n    this.colormap = regl.texture({\n      data: colormap,\n      format: 'rgb',\n      shape: [colormap.length, 1],\n    })\n\n    const validModes = ['grid', 'dotgrid', 'texture']\n    if (!validModes.includes(mode)) {\n      throw Error(\n        `mode '${mode}' invalid, must be one of ${validModes.join(', ')}`\n      )\n    }\n\n    this.bands = getBands(variable, selector)\n\n    customUniforms = Object.keys(customUniforms)\n\n    let primitive,\n      initialize,\n      attributes = {},\n      uniforms = {}\n\n    if (mode === 'grid' || mode === 'dotgrid') {\n      primitive = 'points'\n      initialize = () => regl.buffer()\n      this.bands.forEach((k) => (attributes[k] = regl.prop(k)))\n      uniforms = {}\n    }\n\n    if (mode === 'texture') {\n      primitive = 'triangles'\n      this.bands.forEach((k) => (uniforms[k] = regl.prop(k)))\n    }\n\n    customUniforms.forEach((k) => (uniforms[k] = regl.this(k)))\n\n    this.initialized = new Promise((resolve) => {\n      const loadingID = this.setLoading('metadata')\n      zarr().openGroup(source, (err, loaders, metadata) => {\n        if (setMetadata) setMetadata(metadata)\n        const { levels, maxZoom, tileSize } = getPyramidMetadata(metadata)\n        this.maxZoom = maxZoom\n        const position = getPositions(tileSize, mode)\n        this.position = regl.buffer(position)\n        this.size = tileSize\n        if (mode === 'grid' || mode === 'dotgrid') {\n          this.count = position.length\n        }\n        if (mode === 'texture') {\n          this.count = 6\n        }\n\n        const attrs = metadata.metadata[`${levels[0]}/${variable}/.zattrs`]\n        const array = metadata.metadata[`${levels[0]}/${variable}/.zarray`]\n\n        this.dimensions = attrs['_ARRAY_DIMENSIONS']\n        this.shape = array['shape']\n        this.chunks = array['chunks']\n\n        this.fillValue =\n          fillValue ??\n          array['fill_value'] ??\n          DEFAULT_FILL_VALUES[array['dtype']]\n\n        if (mode === 'texture') {\n          const emptyTexture = ndarray(\n            new Float32Array(Array(1).fill(this.fillValue)),\n            [1, 1]\n          )\n          initialize = () => regl.texture(emptyTexture)\n        }\n\n        this.ndim = this.dimensions.length\n\n        this.coordinates = {}\n        Promise.all(\n          Object.keys(selector).map(\n            (key) =>\n              new Promise((innerResolve) => {\n                loaders[`${levels[0]}/${key}`]([0], (err, chunk) => {\n                  const coordinates = Array.from(chunk.data)\n                  this.coordinates[key] = coordinates\n                  innerResolve()\n                })\n              })\n          )\n        ).then(() => {\n          levels.forEach((z) => {\n            const loader = loaders[z + '/' + variable]\n            this.loaders[z] = loader\n            Array(Math.pow(2, z))\n              .fill(0)\n              .map((_, x) => {\n                Array(Math.pow(2, z))\n                  .fill(0)\n                  .map((_, y) => {\n                    const key = [x, y, z].join(',')\n                    this.tiles[key] = new Tile({\n                      key,\n                      loader,\n                      shape: this.shape,\n                      chunks: this.chunks,\n                      dimensions: this.dimensions,\n                      coordinates: this.coordinates,\n                      bands: this.bands,\n                      initializeBuffer: initialize,\n                    })\n                  })\n              })\n          })\n\n          resolve(true)\n          this.clearLoading(loadingID)\n          this.invalidate()\n        })\n      })\n    })\n\n    this.drawTiles = regl({\n      vert: vert(mode, this.bands),\n\n      frag: frag(mode, this.bands, customFrag, customUniforms),\n\n      attributes: {\n        position: regl.this('position'),\n        ...attributes,\n      },\n\n      uniforms: {\n        viewportWidth: regl.context('viewportWidth'),\n        viewportHeight: regl.context('viewportHeight'),\n        pixelRatio: regl.context('pixelRatio'),\n        colormap: regl.this('colormap'),\n        camera: regl.this('camera'),\n        size: regl.this('size'),\n        zoom: regl.this('zoom'),\n        globalLevel: regl.this('level'),\n        level: regl.prop('level'),\n        offset: regl.prop('offset'),\n        clim: regl.this('clim'),\n        opacity: regl.this('opacity'),\n        fillValue: regl.this('fillValue'),\n        ...uniforms,\n      },\n\n      blend: {\n        enable: true,\n        func: {\n          src: 'one',\n          srcAlpha: 'one',\n          dstRGB: 'one minus src alpha',\n          dstAlpha: 'one minus src alpha',\n        },\n      },\n\n      depth: { enable: false },\n\n      count: regl.this('count'),\n\n      primitive: primitive,\n    })\n\n    this.getProps = () => {\n      const adjustedActive = Object.keys(this.tiles)\n        .filter((key) => this.active[key])\n        .reduce((accum, key) => {\n          const keysToRender = getKeysToRender(key, this.tiles, this.maxZoom)\n          keysToRender.forEach((keyToRender) => {\n            const offsets = this.active[key]\n\n            offsets.forEach((offset) => {\n              const adjustedOffset = getAdjustedOffset(offset, keyToRender)\n              if (!accum[keyToRender]) {\n                accum[keyToRender] = []\n              }\n\n              const alreadySeenOffset = accum[keyToRender].find(\n                (prev) =>\n                  prev[0] === adjustedOffset[0] && prev[1] === adjustedOffset[1]\n              )\n              if (!alreadySeenOffset) {\n                accum[keyToRender].push(adjustedOffset)\n              }\n            })\n          })\n\n          return accum\n        }, {})\n\n      const activeKeys = Object.keys(adjustedActive)\n\n      return activeKeys.reduce((accum, key) => {\n        if (!getOverlappingAncestor(key, activeKeys)) {\n          const [, , level] = keyToTile(key)\n          const tile = this.tiles[key]\n          const offsets = adjustedActive[key]\n\n          offsets.forEach((offset) => {\n            accum.push({\n              ...tile.getBuffers(),\n              level,\n              offset,\n            })\n          })\n        }\n\n        return accum\n      }, [])\n    }\n\n    regl.frame(({ viewportHeight, viewportWidth }) => {\n      if (\n        this.viewport.viewportHeight !== viewportHeight ||\n        this.viewport.viewportWidth !== viewportWidth\n      ) {\n        this.viewport = { viewportHeight, viewportWidth }\n        this.invalidate()\n      }\n    })\n\n    this.draw = () => {\n      this.drawTiles(this.getProps())\n    }\n\n    this.updateCamera = ({ center, zoom }) => {\n      const level = zoomToLevel(zoom, this.maxZoom)\n      const tile = pointToTile(center.lng, center.lat, level)\n      const camera = pointToCamera(center.lng, center.lat, level)\n\n      this.level = level\n      this.zoom = zoom\n      this.camera = [camera[0], camera[1]]\n\n      this.active = getSiblings(tile, {\n        viewport: this.viewport,\n        zoom,\n        camera: this.camera,\n        size: this.size,\n      })\n\n      if (this.size && Object.keys(this.active).length === 0) {\n        this.clearLoading(null, { forceClear: true })\n      }\n\n      Promise.all(\n        Object.keys(this.active).map(\n          (key) =>\n            new Promise((resolve) => {\n              if (this.loaders[level]) {\n                const tileIndex = keyToTile(key)\n                const tile = this.tiles[key]\n\n                const chunks = getChunks(\n                  this.selector,\n                  this.dimensions,\n                  this.coordinates,\n                  this.shape,\n                  this.chunks,\n                  tileIndex[0],\n                  tileIndex[1]\n                )\n                const initialHash = getSelectorHash(this.selector)\n\n                if (tile.hasPopulatedBuffer(this.selector)) {\n                  resolve(false)\n                  return\n                }\n\n                if (tile.isLoadingChunks(chunks)) {\n                  // If tile is already loading all chunks...\n                  tile.chunksLoaded(chunks).then(() => {\n                    // ...wait for ready state and populate buffers if selector is still relevant.\n                    if (initialHash === getSelectorHash(this.selector)) {\n                      tile.populateBuffersSync(this.selector)\n                      this.invalidate()\n                      resolve(false)\n                    } else {\n                      resolve(false)\n                    }\n                  })\n                } else {\n                  // Otherwise, immediately kick off fetch or populate buffers.\n                  if (tile.hasLoadedChunks(chunks)) {\n                    tile.populateBuffersSync(this.selector)\n                    this.invalidate()\n                    resolve(false)\n                  } else {\n                    const loadingID = this.setLoading('chunk')\n                    tile\n                      .populateBuffers(chunks, this.selector)\n                      .then((dataUpdated) => {\n                        this.invalidate()\n                        resolve(dataUpdated)\n                        this.clearLoading(loadingID)\n                      })\n                  }\n                }\n              }\n            })\n        )\n      ).then((results) => {\n        if (results.some(Boolean)) {\n          invalidateRegion()\n        }\n      })\n    }\n\n    this.queryRegion = async (region, selector) => {\n      await this.initialized\n\n      const tiles = getTilesOfRegion(region, this.level)\n\n      await Promise.all(\n        tiles.map(async (key) => {\n          const tileIndex = keyToTile(key)\n          const chunks = getChunks(\n            selector,\n            this.dimensions,\n            this.coordinates,\n            this.shape,\n            this.chunks,\n            tileIndex[0],\n            tileIndex[1]\n          )\n\n          if (!this.tiles[key].hasLoadedChunks(chunks)) {\n            const loadingID = this.setLoading('chunk')\n            await this.tiles[key].loadChunks(chunks)\n            this.clearLoading(loadingID)\n          }\n        })\n      )\n\n      let results,\n        lat = [],\n        lon = []\n      const resultDim =\n        this.ndim -\n        Object.keys(selector).filter((k) => !Array.isArray(selector[k])).length\n      if (resultDim > 2) {\n        results = {}\n      } else {\n        results = []\n      }\n\n      tiles.map((key) => {\n        const [x, y, z] = keyToTile(key)\n        const { center, radius, units } = region.properties\n        for (let i = 0; i < this.size; i++) {\n          for (let j = 0; j < this.size; j++) {\n            const pointCoords = cameraToPoint(\n              x + i / this.size,\n              y + j / this.size,\n              z\n            )\n            const distanceToCenter = distance(\n              [center.lng, center.lat],\n              pointCoords,\n              {\n                units,\n              }\n            )\n            if (distanceToCenter < radius) {\n              lon.push(pointCoords[0])\n              lat.push(pointCoords[1])\n\n              const valuesToSet = this.tiles[key].getPointValues({\n                selector,\n                point: [i, j],\n              })\n\n              valuesToSet.forEach(({ keys, value }) => {\n                if (keys.length > 0) {\n                  setObjectValues(results, keys, value)\n                } else {\n                  results.push(value)\n                }\n              })\n            }\n          }\n        }\n      })\n\n      const out = { [this.variable]: results }\n\n      if (this.ndim > 2) {\n        out.dimensions = this.dimensions.map((d) => {\n          if (d === 'x') {\n            return 'lon'\n          } else if (d === 'y') {\n            return 'lat'\n          } else {\n            return d\n          }\n        })\n\n        out.coordinates = this.dimensions.reduce(\n          (coords, d) => {\n            if (d !== 'x' && d !== 'y') {\n              if (selector.hasOwnProperty(d)) {\n                coords[d] = Array.isArray(selector[d])\n                  ? selector[d]\n                  : [selector[d]]\n              } else {\n                coords[d] = this.coordinates[d]\n              }\n            }\n\n            return coords\n          },\n          { lat, lon }\n        )\n      } else {\n        out.dimensions = ['lat', 'lon']\n        out.coordinates = { lat, lon }\n      }\n\n      return out\n    }\n\n    this.updateSelector = ({ selector }) => {\n      this.selector = selector\n      this.invalidate()\n    }\n\n    this.updateUniforms = (props) => {\n      Object.keys(props).forEach((k) => {\n        this[k] = props[k]\n      })\n      if (!this.display) {\n        this.opacity = 0\n      }\n      this.invalidate()\n    }\n\n    this.updateColormap = ({ colormap }) => {\n      this.colormap = regl.texture({\n        data: colormap,\n        format: 'rgb',\n        shape: [colormap.length, 1],\n      })\n      this.invalidate()\n    }\n  }\n}\n","import React, { useRef, useEffect, useState } from 'react'\nimport { useRegl } from './regl'\nimport { useMapbox } from './mapbox'\nimport { useControls } from './use-controls'\nimport { createTiles } from './tiles'\nimport { useRegion } from './region/context'\nimport { useSetLoading } from './loading'\n\nconst Raster = (props) => {\n  const {\n    display = true,\n    opacity = 1,\n    clim,\n    colormap,\n    index = 0,\n    regionOptions = {},\n    selector = {},\n    uniforms = {},\n  } = props\n  const { center, zoom } = useControls()\n  const [regionDataInvalidated, setRegionDataInvalidated] = useState(\n    new Date().getTime()\n  )\n  const { regl } = useRegl()\n  const { map } = useMapbox()\n  const { region } = useRegion()\n  const { setLoading, clearLoading, loading, chunkLoading, metadataLoading } =\n    useSetLoading()\n  const tiles = useRef()\n  const camera = useRef()\n  const lastQueried = useRef()\n\n  camera.current = { center: center, zoom: zoom }\n\n  const queryRegion = async (r, s) => {\n    const queryStart = new Date().getTime()\n    lastQueried.current = queryStart\n\n    regionOptions.setData({ value: null })\n\n    const data = await tiles.current.queryRegion(r, s)\n\n    // Invoke callback as long as a more recent query has not already been initiated\n    if (lastQueried.current === queryStart) {\n      regionOptions.setData({ value: data })\n    }\n  }\n\n  useEffect(() => {\n    tiles.current = createTiles(regl, {\n      ...props,\n      setLoading,\n      clearLoading,\n      invalidate: () => {\n        map.triggerRepaint()\n      },\n      invalidateRegion: () => {\n        setRegionDataInvalidated(new Date().getTime())\n      },\n    })\n  }, [])\n\n  useEffect(() => {\n    if (props.setLoading) {\n      props.setLoading(loading)\n    }\n  }, [!!props.setLoading, loading])\n  useEffect(() => {\n    if (props.setMetadataLoading) {\n      props.setMetadataLoading(metadataLoading)\n    }\n  }, [!!props.setMetadataLoading, metadataLoading])\n  useEffect(() => {\n    if (props.setChunkLoading) {\n      props.setChunkLoading(chunkLoading)\n    }\n  }, [!!props.setChunkLoading, chunkLoading])\n\n  useEffect(() => {\n    const callback = () => {\n      if (Object.values(camera.current).some(Boolean)) {\n        tiles.current.updateCamera(camera.current)\n        tiles.current.draw()\n      }\n    }\n    map.on('render', callback)\n\n    return () => {\n      regl.clear({\n        color: [0, 0, 0, 0],\n        depth: 1,\n      })\n      map.off('render', callback)\n      map.triggerRepaint()\n    }\n  }, [index])\n\n  useEffect(() => {\n    tiles.current.updateSelector({ selector })\n  }, Object.values(selector))\n\n  useEffect(() => {\n    tiles.current.updateUniforms({ display, opacity, clim, ...uniforms })\n  }, [display, opacity, clim, ...Object.values(uniforms)])\n\n  useEffect(() => {\n    tiles.current.updateColormap({ colormap })\n  }, [colormap])\n\n  useEffect(() => {\n    if (region && regionOptions?.setData) {\n      queryRegion(region, regionOptions.selector || selector)\n    }\n  }, [\n    regionOptions?.setData,\n    region,\n    regionDataInvalidated,\n    ...Object.values(regionOptions?.selector || selector || {}),\n  ])\n\n  return null\n}\n\nexport default Raster\n","import { useEffect, useRef } from 'react'\nimport { useMapbox } from './mapbox'\nimport { updatePaintProperty } from './utils'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Line = ({\n  source,\n  variable,\n  color,\n  id,\n  maxZoom = 5,\n  opacity = 1,\n  blur = 0.4,\n  width = 0.5,\n}) => {\n  const { map } = useMapbox()\n  const removed = useRef(false)\n\n  const sourceIdRef = useRef()\n  const layerIdRef = useRef()\n\n  useEffect(() => {\n    map.on('remove', () => {\n      removed.current = true\n    })\n  }, [])\n\n  useEffect(() => {\n    sourceIdRef.current = id || uuidv4()\n    const { current: sourceId } = sourceIdRef\n    if (!map.getSource(sourceId)) {\n      map.addSource(sourceId, {\n        type: 'vector',\n        tiles: [`${source}/{z}/{x}/{y}.pbf`],\n      })\n      if (maxZoom) {\n        map.getSource(sourceId).maxzoom = maxZoom\n      }\n    }\n  }, [id])\n\n  useEffect(() => {\n    const layerId = layerIdRef.current || uuidv4()\n    layerIdRef.current = layerId\n    const { current: sourceId } = sourceIdRef\n    if (!map.getLayer(layerId)) {\n      map.addLayer({\n        id: layerId,\n        type: 'line',\n        source: sourceId,\n        'source-layer': variable,\n        layout: { visibility: 'visible' },\n        paint: {\n          'line-blur': blur,\n          'line-color': color,\n          'line-opacity': opacity,\n          'line-width': width,\n        },\n      })\n    }\n\n    return () => {\n      if (!removed.current) {\n        if (map.getLayer(layerId)) {\n          map.removeLayer(layerId)\n        }\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'line-color', color)\n  }, [color])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'line-opacity', opacity)\n  }, [opacity])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'line-width', width)\n  }, [width])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'line-blur', blur)\n  }, [blur])\n\n  return null\n}\n\nexport default Line\n","import { useEffect, useRef } from 'react'\nimport { useMapbox } from './mapbox'\nimport { updatePaintProperty } from './utils'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Fill = ({ source, variable, color, id, maxZoom = 5, opacity = 1 }) => {\n  const { map } = useMapbox()\n  const removed = useRef(false)\n\n  const sourceIdRef = useRef()\n  const layerIdRef = useRef()\n\n  useEffect(() => {\n    map.on('remove', () => {\n      removed.current = true\n    })\n  }, [])\n\n  useEffect(() => {\n    sourceIdRef.current = id || uuidv4()\n    const { current: sourceId } = sourceIdRef\n    if (!map.getSource(sourceId)) {\n      map.addSource(sourceId, {\n        type: 'vector',\n        tiles: [`${source}/{z}/{x}/{y}.pbf`],\n      })\n      if (maxZoom) {\n        map.getSource(sourceId).maxzoom = maxZoom\n      }\n    }\n  }, [id])\n\n  useEffect(() => {\n    layerIdRef.current = uuidv4()\n    const { current: layerId } = layerIdRef\n    const { current: sourceId } = sourceIdRef\n    if (!map.getLayer(layerId)) {\n      map.addLayer({\n        id: layerId,\n        type: 'fill',\n        source: sourceId,\n        'source-layer': variable,\n        layout: { visibility: 'visible' },\n        paint: {\n          'fill-color': color,\n          'fill-opacity': opacity,\n        },\n      })\n    }\n\n    return () => {\n      if (!removed.current) {\n        if (map.getLayer(layerId)) {\n          map.removeLayer(layerId)\n        }\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'fill-color', color)\n  }, [color])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'fill-opacity', opacity)\n  }, [opacity])\n\n  return null\n}\n\nexport default Fill\n","import { useEffect } from 'react'\nimport { ticks } from 'd3-array'\nimport { axisBottom, axisLeft } from 'd3-axis'\nimport { scaleOrdinal } from 'd3-scale'\nimport { select } from 'd3-selection'\n\nimport { useMapbox } from './mapbox'\n\nconst TICK_SEPARATION = 150 // target distance between ticks\nconst TICK_SIZE = 6 // tick length\nconst TICK_MARGIN = 2 // distance between gridlines and tick text\n\nfunction useRuler({\n  showAxes = true,\n  showGrid = false,\n  fontFamily,\n  gridColor,\n}) {\n  const { map } = useMapbox()\n\n  useEffect(() => {\n    if (!showAxes && !showGrid) {\n      return\n    }\n\n    let rulerContainer = null\n    let setRulerTicks = null\n\n    function addRuler() {\n      const mapContainer = map.getContainer()\n      const height = mapContainer.offsetHeight\n      const width = mapContainer.offsetWidth\n      const numXTicks = width / TICK_SEPARATION\n      const numYTicks = height / TICK_SEPARATION\n\n      rulerContainer = select(mapContainer)\n        .append('svg')\n        .classed('ruler', true)\n        .attr('width', width)\n        .attr('height', height)\n        .style('position', 'absolute')\n        .style('top', 0)\n        .style('left', 0)\n        .style('pointer-events', 'none')\n\n      // x-axis\n      const gx = rulerContainer\n        .append('g')\n        .classed('ruler-axis', true)\n        .style('font-size', '14px')\n        .style('font-family', fontFamily)\n\n      const xAxis = (g, x) =>\n        g\n          .call(\n            axisBottom(x)\n              .tickValues(x.domain())\n              .tickFormat((d) => `${d}°`)\n              .tickSize(TICK_SIZE)\n          )\n          .call((g) => g.select('.domain').remove())\n\n      // y-axis\n      const gy = rulerContainer\n        .append('g')\n        .classed('ruler-axis', true)\n        .attr('transform', `translate(${width},0)`)\n        .style('font-size', '14px')\n        .style('font-family', fontFamily)\n\n      const yAxis = (g, y) =>\n        g\n          .call(\n            axisLeft(y)\n              .tickValues(y.domain())\n              .tickFormat((d) => `${d}°`)\n              .tickSize(TICK_SIZE)\n          )\n          .call((g) => g.select('.domain').remove())\n\n      // grid\n      const { gGrid, grid } = showGrid\n        ? {\n            gGrid: rulerContainer\n              .append('g')\n              .classed('ruler-grid', true)\n              .style('stroke', gridColor)\n              .style('stroke-dasharray', '3,2')\n              .style('stroke-opacity', 0.8),\n\n            grid: (g, x, y) => {\n              const xTickHeight = gx.node().getBoundingClientRect().height\n              const yTickNodes = gy.selectAll('.tick').nodes()\n              return g\n                .call((g) =>\n                  g\n                    .selectAll('.x')\n                    .data(x.domain())\n                    .join(\n                      (enter) =>\n                        enter\n                          .append('line')\n                          .classed('x', true)\n                          .attr('y1', xTickHeight + TICK_MARGIN)\n                          .attr('y2', height),\n                      (update) => update,\n                      (exit) => exit.remove()\n                    )\n                    .attr('x1', (d) => 0.5 + x(d))\n                    .attr('x2', (d) => 0.5 + x(d))\n                )\n                .call((g) =>\n                  g\n                    .selectAll('.y')\n                    .data(y.domain())\n                    .join(\n                      (enter) => enter.append('line').classed('y', true),\n                      (update) => update,\n                      (exit) => exit.remove()\n                    )\n                    .attr('y1', (d) => 0.5 + y(d))\n                    .attr('y2', (d) => 0.5 + y(d))\n                    .attr('x2', (d, i) => {\n                      const yTickWidth = yTickNodes[i]\n                        ? yTickNodes[i].getBoundingClientRect().width\n                        : 0\n                      return width - yTickWidth - TICK_MARGIN\n                    })\n                )\n            },\n          }\n        : {\n            gGrid: null,\n            grid: null,\n          }\n\n      // the important bit\n      setRulerTicks = () => {\n        const b = map.getBounds()\n\n        const xDomain = ticks(b.getWest(), b.getEast(), numXTicks)\n        const xRange = xDomain.map((lng) => map.project([lng, 0]).x)\n        const x = scaleOrdinal().domain(xDomain).range(xRange)\n\n        const yDomain = ticks(b.getNorth(), b.getSouth(), numYTicks)\n        const yRange = yDomain.map((lat) => map.project([0, lat]).y)\n        const y = scaleOrdinal().domain(yDomain).range(yRange)\n\n        if (showAxes) {\n          gx.call(xAxis, x)\n          gy.call(yAxis, y)\n        }\n        if (showGrid) {\n          gGrid.call(grid, x, y)\n        }\n      }\n\n      setRulerTicks()\n      map.on('move', setRulerTicks)\n    }\n\n    function removeRuler() {\n      if (rulerContainer) {\n        rulerContainer.remove()\n      }\n      if (setRulerTicks) {\n        map.off('move', setRulerTicks)\n      }\n    }\n\n    function resetRuler() {\n      removeRuler()\n      addRuler()\n    }\n\n    addRuler()\n    map.on('resize', resetRuler)\n\n    return function cleanup() {\n      removeRuler()\n      map.off('resize', resetRuler)\n    }\n  }, [showAxes, showGrid, fontFamily, gridColor])\n}\n\nexport default useRuler\n"],"names":["MapboxContext","createContext","useMapbox","useContext","Mapbox","glyphs","style","center","zoom","minZoom","maxZoom","maxBounds","debug","children","map","useRef","ready","setReady","useState","ref","useCallback","node","mapboxStyle","version","sources","layers","current","mapboxgl","Map","container","dragRotate","pitchWithRotate","touchZoomRotate","setCenter","setZoom","disableRotation","touchPitch","disable","on","useEffect","remove","showTileBoundaries","React","createElement","Provider","value","_extends","top","bottom","position","width","ReglContext","useRegl","Regl","extensions","regl","_regl","destroy","height","RegionContext","region","onChange","Error","useRegionContext","useRegion","RegionProvider","setRegion","LoadingContext","useSetLoading","loadingId","uuidv4","loading","dispatch","metadataIds","setMetadataIds","Set","chunkIds","setChunkIds","loaders","id","key","forEach","push","type","size","setLoading","includes","setter","prev","add","clearLoading","forceClear","prevMetadata","delete","prevChunk","metadataLoading","chunkLoading","reducer","state","action","LoadingProvider","useReducer","metadata","chunk","useLoadingContext","LoadingUpdater","setMetadataLoading","setChunkLoading","tabIndex","className","overflow","pointerEvents","zIndex","project","coordinates","options","ll","LngLat","convert","result","referencePoint","deltas","delta","alternate","lat","lng","Math","abs","x","getPathMaker","transform","geoTransform","point","stream","y","geoPath","projection","CursorManager","canvas","getCanvas","originalStyle","cursor","mouseState","onHandle","draggingHandle","onCircle","draggingCircle","setCursor","newState","POLES","abbreviations","kilometers","miles","CircleRenderer","onIdle","circle","onDrag","initialCenter","initialRadius","maxRadius","minRadius","units","centerXY","radius","svg","select","svgCircle","svgCircleCutout","svgHandle","svgGuideline","svgRadiusTextContainer","svgRadiusText","attr","guidelineAngle","removers","addDragHandleListeners","onMouseMove","e","r","distance","unproject","toArray","min","max","setRadius","mouseXY","rise","run","angle","atan","PI","setCircle","onMouseUp","off","once","removeDragHandleListeners","addCircleListeners","offset","mapCanvas","lngLat","offsetX","offsetY","preventDefault","newEvent","constructor","dispatchEvent","removeCircleListeners","addMapMoveListeners","onMove","removeMapMoveListeners","geoCircle","inverted","c","turfCircle","steps","properties","area","convertArea","getZoom","rewind","reverse","mutate","_center","_point","nearPoles","resetCenterXY","_radius","turfPoint","some","pole","makePath","path","cutoutCircle","cutoutPath","getBBox","handleXY","rhumbDestination","geometry","lineEnd","line","lineString","inter","lineIntersect","features","length","translateY","text","toFixed","translateX","textWidth","coeff","sin","CirclePicker","backgroundColor","color","fontFamily","fontSize","renderer","setRenderer","cleanup","loaded","left","stroke","strokeWidth","fill","clipPath","fillOpacity","strokeOpacity","strokeDasharray","textAnchor","getInitialRadius","bounds","getBounds","dist","round","RegionPicker","initialRadiusProp","getCenter","handleCircle","undefined","useRecenterRegion","_region$properties","setValue","recenterRegion","easeTo","useControls","updateControlsSync","flushSync","_sh","mode","which","vert","vars","sh","d","join","frag","customFrag","customUniforms","declarations","d2r","clip","v","keyToTile","split","parseInt","tileToKey","tile","pointToTile","lon","z","z2","pow","pointToCamera","floor","log","cameraToPoint","y2","exp","zoomToLevel","getOffsets","tileSize","camera","siblingCount","cameraOffset","next","ceil","getSiblings","viewport","tileX","tileY","tileZ","viewportHeight","viewportWidth","cameraX","cameraY","magnification","scale","window","devicePixelRatio","deltaX","deltaY","offsets","reduce","accum","getKeysToRender","targetKey","tiles","ancestor","getAncestorToRender","descendants","getDescendantsToRender","isBufferPopulated","initialX","initialY","initialZ","coverage","keys","coveringKeys","filter","currentCoverage","getOverlappingAncestor","renderedKeys","aX","aY","aZ","child","find","parentKey","bX","bY","bZ","parent","factor","getAdjustedOffset","renderedKey","renderedX","renderedY","renderedLevel","level","descendantFactor","getTilesOfRegion","centralTile","edgeTile","maxDiff","centerPoint","bearing","rhumbBearing","i","intermediatePoint","intermediateTile","Array","from","getPyramidMetadata","multiscales","datasets","levels","dataset","Number","pixels_per_tile","getBandInformation","selector","combinedBands","Object","isArray","bandMapping","selectorKey","values","bands","updatedBands","band","bandKey","getBands","variable","bandInfo","bandNames","setObjectValues","obj","getSelectorHash","JSON","stringify","getChunks","dimensions","shape","chunks","chunkIndicesToUse","dimension","selectorValue","coords","chunkSize","indices","indexOf","_","j","index","a","updatedResult","getPositions","updatePaintProperty","getLayer","setPaintProperty","DEFAULT_FILL_VALUES","Tile","loader","initializeBuffer","tileCoordinates","_bufferCache","_buffers","_loading","_ready","k","chunkedData","_loader","getBuffers","loadChunks","updated","Promise","all","resolve","innerResolve","err","data","Boolean","populateBuffers","populateBuffersSync","bandInformation","info","chunkKey","bandData","findIndex","coordinate","pick","isLoading","isLoadingChunks","every","chunksLoaded","hasLoadedChunks","hasPopulatedBuffer","getPointValues","chunkData","combinedIndices","count","chunkOffset","hasOwnProperty","selectorValues","selectorIndices","concat","updatedAccum","el","chunkIndices","get","createTiles","opts","Tiles","source","colormap","clim","opacity","display","uniforms","fillValue","invalidate","invalidateRegion","setMetadata","active","texture","format","validModes","primitive","initialize","attributes","buffer","prop","this","initialized","loadingID","zarr","openGroup","_ref","attrs","array","emptyTexture","ndarray","Float32Array","ndim","then","drawTiles","context","pixelRatio","globalLevel","blend","enable","func","src","srcAlpha","dstRGB","dstAlpha","depth","getProps","adjustedActive","keysToRender","keyToRender","adjustedOffset","alreadySeenOffset","activeKeys","frame","draw","updateCamera","tileIndex","initialHash","dataUpdated","results","queryRegion","resultDim","pointCoords","distanceToCenter","valuesToSet","out","updateSelector","updateUniforms","props","updateColormap","Raster","regionOptions","regionDataInvalidated","setRegionDataInvalidated","Date","getTime","lastQueried","s","queryStart","setData","triggerRepaint","callback","clear","Line","blur","removed","sourceIdRef","layerIdRef","sourceId","getSource","addSource","maxzoom","layerId","addLayer","layout","visibility","paint","removeLayer","Fill","TICK_SEPARATION","TICK_SIZE","TICK_MARGIN","useRuler","showAxes","showGrid","gridColor","rulerContainer","setRulerTicks","addRuler","mapContainer","getContainer","offsetHeight","offsetWidth","numXTicks","numYTicks","append","classed","gx","xAxis","g","call","axisBottom","tickValues","domain","tickFormat","tickSize","gy","yAxis","axisLeft","gGrid","grid","xTickHeight","getBoundingClientRect","yTickNodes","selectAll","nodes","enter","update","exit","yTickWidth","b","xDomain","ticks","getWest","getEast","xRange","scaleOrdinal","range","yDomain","getNorth","getSouth","yRange","removeRuler","resetRuler"],"mappings":"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"}